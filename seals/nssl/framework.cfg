// 			framework for nssl scripts
// 
// 	use this template to generate a proper nssl scriptfile
// ------[on public release remove all lines to the top from here]------
// 
// by defcon-x <defcon-x@ns-co.net> 02.03.03 
// homepage: http://www.team-mirage.net/defconsvault
// description: 
//
// this is a framework i strongly suggest you to use it when you start
// to write your own NSSL scripts
// 
// keys:
//
//	x start/stop script
//
// note:
//	
//  	quick tutorial - replace all _generic_ with your scriptname
//			 so that it doesn't conflict with other
//			 nssl framework based scripts..
//			 so var_generic_key will be var_yourscript_key
//	

// --- Modify the following variables

set var_generic_scriptver	"seals-1.93"
set script_name "^1NSSL Script Framework^7"
// press <var_generic_key> to <script_dsr>
set script_dscr "^7start the Script Framework"
set script_filename "^1framework.cfg^7"
set author_name "^1defcon-x^7"
set author_email "^4defcon-x@ns-co.net^7"

// make it easier and cooler to change key 
// bind it to whatever you want
set var_generic_key		"m"
     

//
// functions
//
set func_generic_main "cs exec { nsecho health *health weapon *weapon rounds *rounds clips *clips }";


// entry point for this script
set generic_entry "vstr func_generic_main;" 

// init it
cs if var_generic_version != 0.5 then { set var_generic_version 0.5 };
cs exec { bind $var_generic_key "vstr generic_entry" }
set func_generic_hello "cs exec { say ^7I'm using the $script_name by $author_name ( $author_email ) $var_generic_version }; cs exec { nsecho ^7Press '^1 $var_generic_key ^7' to $script_dscr }";



// check for wrong version
cs if gameversion != $var_generic_scriptver then { nsecho NSSL: ^1INVALID GAMEVERSION FOR SCRIPT $script_filename (^7SCRIPT DISABLED^1) # unbind $var_generic_key } else { vstr func_generic_hello }
