// automatic stats script nssl script 
// 
// by defcon-x/defcon-x@ns-co.net 01.03.02 
// homepage: ns-co.net 
// description: 
//	this excellent script provides players with the ability
//	to auto report their status about picked up briefcases/bombs
//	when you loose health it also reports that
//	includes full radio support
//	no key binds required!
//	excellent plug and play technique! no editing required! start/stop script via reload.

// commands:
//	none required!

// note:
//	to stop the script just reload it :)

//
// vars
//
set	var_health_old 		100 
set	var_health		100
set	var_health_ua		0
set	var_stats_speed		100

set 	var_bomb_has		0
set	var_bc_has		0 

set	var_attack_key		MOUSE1
set	check_nade_checked	0

set	check_nade_a		"Flashbang"
set	check_nade_b		"Mk26 Grenade"

set	check_nade_yell		"cs exec { say_team ^1Watch Out! ^1[ *weapon ]^7 primed. ^1Take Cover!^7 # radio ingrenade }"
set 	check_nade		"cs if ( *weapon == check_nade_a || *weapon == check_nade_b && *rounds == -1 ) { vstr check_nade_yell }"
set	check_nade_dn 		"+attack;cs if check_nade_checked == 0 { set check_nade_checked 1 # vstr check_nade }"
set	check_nade_up		"-attack;set check_nade_checked 0"

toggle var_stats_active

cs if var_health_version != 1.0 then { set var_health_version 1.0 };

nssl exec { bind $var_attack_key +alias check_nade_dn check_nade_up }
//
// functions
//

//
// health functions
//
set func_health_underattack_1 "radio takefire; wait;wait;wait;wait;wait;wait; cs exec { say_team ^1I'm hit!^7 I got^1 *health health^7 left! Got^1 *clips clips ^7and^1 *rounds ^7rounds in my^1 *weapon ^7... # toggle var_health_ua }"
set func_health_underattack_2 "radio reportingin; wait;wait;wait;wait;wait;wait; cs exec { say_team ^1I'm under attack!^7 My Status: ^1 *health health^7 left! Got^1 *clips clips ^7and^1 *rounds ^7rounds in my^1 *weapon ^7... # toggle var_health_ua }"
set func_health_underattack "cs if var_health_ua == 0 then { vstr func_health_underattack_1 } else { vstr func_health_underattack_2 }";

set func_dead "say_team I'm ^1dead^7. Check the area for enemys!"
set func_health_regained " "

set func_health_update "cs exec { set var_health_old $var_health # set var_health *health }";

set func_health_smaller "cs if var_health_old > $var_health then { cs if *health > 0 { vstr func_health_underattack } else { vstr func_dead } # set var_health_old *health }";
set func_health_greater "cs if var_health_old < $var_health then { vstr func_health_regained # set var_health_old *health }";

set func_health_check "vstr func_health_update; vstr func_health_smaller; vstr func_health_greater";

//
// bomb functions
//
set func_freshbomb "set var_bomb_has 1; radio coverme; cs exec { say_team ^1I've got the bomb^7!I got^1 *health hp ^7owning with a^1 *weapon ^7. ^1Regroup^7 and ^1Follow^7!";
set func_gotbomb "cs if $var_bomb_has == 0 then { vstr func_freshbomb }";

set func_lostbomb "set var_bomb_has 0; cs exec { say_team ^1I lost the bomb!^7 Search and Recover }";
set func_nobomb "cs if $var_bomb_has == 1 then { vstr func_lostbomb }";

set func_bomb_check "cs if $ui_gotbomb == 1 then { vstr func_gotbomb } else { vstr func_nobomb }";

//
// bc functions
//
set func_freshbc "set var_bc_has 1; radio followme; say_team ^1I've got a Briefcase!^7 I got^1 *health hp ^7owning with a^1 *weapon ^7. ^1Regroup^7 and ^1Follow^7!";
set func_gotbc "cs if var_bc_has == 0 then { vstr func_freshbc }";

set func_lostbc "set var_bc_has 0; say_team ^1I lost the Briefcase! FUCK!^7 Search and Recover";
set func_nobc "cs if var_bc_has == 1 then { vstr func_lostbc }";

set func_bc_check "cs if ui_gotbriefcase == 1 then { vstr func_gotbc } else { vstr func_nobc }";
 
// main function
set var_stats_check "vstr func_health_check ; vstr func_bomb_check ; vstr func_bc_check";
set var_stats_main "cs if ( *spectator == 0 && *chasing == 0 ) then { vstr var_stats_check }";

//
// start the script 
//
cs while var_stats_active >= 1 { vstr var_stats_main } $var_stats_speed	-1;


//
// inits.. don't remove those, they're important
//
cs if var_stats_active == 1 then { cs exec { say I'm using ^2defcons NSSL ^4automatic health script^7 (defcon-x@ns-co.net) $var_health_version } };
cs if var_stats_active == 1 then { cs exec { say ^7GFX:^4 $r_lastvalidrenderer ^7OS:^4 $arch ^7 MAP:^4 $mapname ^7CPU:^4 $sys_cpustring ^7   } };
cs if var_stats_active == 1 then { cs exec { nsecho ^1The script has been automatically loaded to stop it reload it! } } else { nsecho ^7The Automatic Health Script has been ^1unloaded^7! };